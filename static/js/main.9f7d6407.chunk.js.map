{"version":3,"sources":["components/About.js","components/Services.js","components/ContactForm.js","App.js","serviceWorker.js","index.js","handshake.svg"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","marginTop","marginRight","emailAndPhone","display","alignContent","flexWrap","flexDirection","About","props","classes","Fragment","DialogTitle","DialogContent","TextField","label","defaultValue","fullWidth","InputProps","readOnly","startAdornment","InputAdornment","position","className","size","DialogActions","Button","variant","onClick","e","closeFunction","color","Services","List","ListItem","ListItemIcon","ListItemText","primary","container","button","ContactForm","handleClose","React","useState","name","email","phoneNumber","message","contactForm","setContactForm","emailRegex","invalidEmailError","setInvalidEmailError","invalidEmailFlag","setInvalidEmailFlag","postForm","a","headers","console","log","axios","post","then","response","catch","error","onEmailChange","test","handleSetContactFormRequest","event","target","value","autoComplete","onSubmit","FormControl","component","required","id","onChange","helperText","multiline","rows","disabled","type","App","openAbout","setOpenAbout","openServices","setOpenServices","openContactForm","setOpenContactForm","handleAboutClose","handleAboutOpen","handleServicesClose","handleContactFormClose","src","handshake","alt","Tooltip","title","startIcon","IconButton","window","open","Dialog","maxWidth","onClose","show","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9f7d6407.chunk.js","sourcesContent":["import React from 'react'\nimport { DialogActions, DialogTitle, DialogContent, Button, TextField, InputAdornment } from '@material-ui/core'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport EmailIcon from '@material-ui/icons/Email'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(.3),\n        marginTop: 15,\n        marginRight: 20\n    },\n    emailAndPhone: {\n        display: 'flex',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    },\n}))\n\nconst About = (props) => {\n    const handleClose = () => {\n        props.closeFunction()\n    }\n\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <DialogTitle>\n                About\n            </DialogTitle>\n            <DialogContent>\n                <div>\n                    {/* <p>\n                        Friends Accounting Services has been providing trusted and certified accounting services that meet a wide range of corporate and personal business needs in the UK.\n                    </p> */}\n                    <p>\n                        We are here to handle all of your bookkeeping, taxation and payroll demands; so that you can keep focusing on your core priorities both within business and your personal life.\n                    </p>\n                    <p>\n                        Solutions for your accounts, bookkeeping, taxation, VAT & payroll matters.\n                    </p>\n                    <p>\n                        Our contact information is listed below. Also find out what other services we offer by clicking the Services Offered button on the main page. \n                    </p>\n                </div>\n\n                <div>\n                    <TextField\n                        // className={classes.formControl}\n                        label=\"Address\"\n                        defaultValue=\"1 Alice Close, Bedworth Coventry CV12 0BS, United Kingdom\"\n                        fullWidth={true}\n                        InputProps={{\n                            readOnly: true,\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <BusinessIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <div className={classes.emailAndPhone}>\n                        <TextField\n                            className={classes.formControl}\n                            label=\"Phone Number\"\n                            defaultValue=\"+44 (744) 025-6423\"\n                            size=\"medium\"\n                            InputProps={{\n                                readOnly: true,\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <PhoneIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <TextField\n                            className={classes.formControl}\n                            label=\"Email\"\n                            defaultValue=\"test@test.com\"\n                            InputProps={{\n                                readOnly: true,\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" onClick={e => handleClose()} color=\"secondary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    )\n}\n\nexport default About","import React from 'react'\nimport { DialogActions, DialogTitle, DialogContent, Button } from '@material-ui/core'\nimport { List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core'\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport PeopleIcon from '@material-ui/icons/People';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PaymentIcon from '@material-ui/icons/Payment';\n\nconst Services = (props) => {\n    const handleClose = () => {\n        props.closeFunction()\n    }\n\n    return (\n        <React.Fragment>\n            <DialogTitle>\n                Services We Offer\n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    <ListItem>\n                        <ListItemIcon>\n                            <MenuBookIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Bookkeeping\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <BusinessIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Company's Formation\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <LocationCityIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Company's Returns & Annual Accounts\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <AccountBalanceIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Corporation Tax\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <PeopleIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Self Assessment Tax for Individuals and Sole Proprietorship (Special Discounts available for Taxi Drivers)\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <HomeIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Streamline your finance fucntion and mortgage advice\"\n                        />\n                    </ListItem>\n\n                    <ListItem>\n                        <ListItemIcon>\n                            <PaymentIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary=\"Fees start at £99\"\n                        />\n                    </ListItem>\n\n                    {/* Extra items:\n                    VAT Returns\n\n                    Business Advisory\n\n                    Streamline your Finance Function\n\n                    Here to support, not just 'do the books'\n                    */}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" onClick={e => handleClose()} color=\"secondary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    )\n}\n\nexport default Services","import React from 'react'\nimport axios from 'axios'\nimport '../App.css'\nimport { DialogTitle, Button, FormControl, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1.5),\n    },\n    container: {\n        display: 'flex',\n        alignContent: 'left',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n    },\n    button: {\n        display: 'flex',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    },\n}))\n\nconst ContactForm = (props) => {\n    const handleClose = () => {\n        props.closeFunction()\n    }\n\n    const initialForm = {\n        name: '',\n        email: '',\n        phoneNumber: '',\n        message: ''\n    }\n\n    const [contactForm, setContactForm] = React.useState(initialForm)\n    // eslint-disable-next-line\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{1,}))$/;\n\n    const [invalidEmailError, setInvalidEmailError] = React.useState('')\n    const [invalidEmailFlag, setInvalidEmailFlag] = React.useState(false)\n\n    const classes = useStyles()\n    const sendFormUrl = \"https://whispering-ridge-38836.herokuapp.com/mail\"\n\n    const postForm = async () => {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        console.log('ContactForm %o', contactForm)\n        await axios\n            .post(sendFormUrl, contactForm, { headers: headers })\n            .then((response) => {\n                console.log('Status %o', response)\n                handleClose()\n            })\n            .catch((error) => {\n                console.log('post form error %o', error)\n            })\n    }\n\n    const onEmailChange = () => {\n        console.log(contactForm.email)\n        if(emailRegex.test(contactForm.email)){\n            setInvalidEmailFlag(false)\n            setInvalidEmailError('')\n        }\n        else{\n            setInvalidEmailError('Please enter a valid email')\n            setInvalidEmailFlag(true)\n        }\n    }\n\n    const handleSetContactFormRequest = event => {\n        setContactForm({\n            ...contactForm,\n            [event.target.name]: event.target.value\n        })\n        onEmailChange(event)\n    }\n\n    return (\n        <React.Fragment>\n            <DialogTitle>\n                Contact Us\n            </DialogTitle>\n            <form autoComplete=\"off\" onSubmit={e => postForm()}>\n                <div className={classes.container}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <TextField\n                            required id=\"name\" name=\"name\" label=\"Name\" \n                            value={contactForm.name} variant=\"outlined\"\n                            onChange={handleSetContactFormRequest}\n                        />\n                    </FormControl>\n\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <TextField \n                            required id=\"email\" name=\"email\" label=\"Email\" \n                            error={invalidEmailFlag}\n                            helperText={invalidEmailError}\n                            value={contactForm.email} variant=\"outlined\"\n                            onChange={e => {\n                                handleSetContactFormRequest(e)\n                                onEmailChange(e)\n                            }}\n                        />\n                    </FormControl>\n\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <TextField \n                            id=\"phoneNumber\" name=\"phoneNumber\" label=\"Phone Number\" \n                            value={contactForm.phoneNumber} variant=\"outlined\"\n                            onChange={handleSetContactFormRequest}\n                        />\n                    </FormControl>\n\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <TextField\n                            id=\"message\"\n                            required\n                            label=\"Message\"\n                            name=\"message\"\n                            value={contactForm.message}\n                            multiline\n                            rows={12}\n                            variant=\"outlined\"\n                            onChange={handleSetContactFormRequest}\n                        />\n                    </FormControl>\n                </div>\n                <div className={classes.button}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <Button disabled={invalidEmailFlag} variant=\"outlined\" type=\"submit\" color=\"primary\">\n                            Submit\n                        </Button>\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <Button variant=\"outlined\" onClick={e => handleClose()} color=\"secondary\">\n                            Close\n                        </Button>\n                    </FormControl>\n                </div>\n            </form>\n        </React.Fragment>\n    )\n}\n\nexport default ContactForm","import React from 'react';\nimport handshake from './handshake.svg'\nimport { Button, Dialog, IconButton, Tooltip } from '@material-ui/core';\nimport About from './components/About'\nimport Services from './components/Services'\nimport ContactForm from './components/ContactForm'\nimport InfoIcon from '@material-ui/icons/Info';\nimport BuildIcon from '@material-ui/icons/Build';\nimport EmailIcon from '@material-ui/icons/Email';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport './App.css';\n\nfunction App() {\n\n  const [openAbout, setOpenAbout] = React.useState(false)\n  const [openServices, setOpenServices] = React.useState(false)\n  const [openContactForm, setOpenContactForm] = React.useState(false)\n\n  function handleAboutClose(){\n    setOpenAbout(false)\n  }\n\n  function handleAboutOpen(){\n    setOpenAbout(true)\n  }\n\n  function handleServicesClose(){\n    setOpenServices(false)\n  }\n\n  function handleServicesOpen(){\n    setOpenServices(true)\n  }\n\n  function handleContactFormClose(){\n    setOpenContactForm(false)\n  }\n\n  function handleContactFormOpen(){\n    setOpenContactForm(true)\n  }\n\n  return (\n    <React.Fragment>\n      <div className= \"Background\">\n        <div>\n          <header className=\"App-header\">\n            <img src={handshake} className=\"App-logo\" alt=\"logo\" />\n            Friends Accounting Services\n            <div className=\"Buttons-header\">\n              <div className=\"Button\">\n                <Tooltip title=\"View Services We Offer\">\n                  <Button variant=\"outlined\" color=\"default\" size=\"medium\" startIcon={<BuildIcon/>}\n                    onClick={() => handleServicesOpen()}\n                  >\n                    Services\n                  </Button>\n                </Tooltip>\n              </div>\n\n              <div className=\"Button\">\n                <Tooltip title=\"More About Us\">\n                  <Button variant=\"outlined\" color=\"primary\" size=\"medium\" startIcon={<InfoIcon/>} \n                    onClick={() => handleAboutOpen()}\n                  >\n                    About\n                  </Button>\n                </Tooltip>\n              </div>\n\n              <div className=\"Button\">\n                <Tooltip title=\"Send us a message\">\n                  <Button variant=\"outlined\" color=\"secondary\" size=\"medium\" startIcon={<EmailIcon/>}\n                    onClick={() => handleContactFormOpen()}\n                  >\n                    Contact\n                  </Button>\n                </Tooltip>\n              </div>\n            </div>\n          </header>\n        </div>\n\n        <div>\n          <div className=\"ContentHeader\">\n            Welcome to Friends Accounting Services\n          </div>\n\n          <div className=\"SubcontentHeader\">\n            <p>\n            Friends Accounting Services has been providing trusted and certified accounting services that meet a wide range of corporate and personal business needs in the UK.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"ContentButton\">\n          <Button variant=\"contained\" color=\"primary\" size=\"medium\" startIcon={<InfoIcon/>} \n            onClick={() => handleAboutOpen()}\n          >\n            Click here to learn more\n          </Button>\n        </div>\n        \n\n        {/* <div className=\"CompanyHeader\">\n        <div className=\"Main-header\">\n                Friends Accounting Services\n                <img src={handshake} className=\"App-logo\" alt=\"logo\" />\n            </div>\n            \n        </div> */}\n        <div className=\"Socials\">\n          {/* <div hidden={emailFlag} className={classes.formControl}>\n            <TextField\n              id=\"outlined-read-only-input\"\n              // label=\"Email\"\n              size=\"small\"\n              defaultValue=\"test@test.com\"\n              InputProps={{\n                readOnly: true,\n              }}\n              // variant=\"outlined\"\n            />\n          </div> */}\n          {/* <Tooltip title=\"View Email Address\">\n            <IconButton color=\"secondary\"\n            onClick={() => setEmailFlag(!emailFlag)}\n              // onClick={() => {window.open(\"mailto:test@test.com\")}}\n            >\n              <AlternateEmailIcon/>\n            </IconButton>\n          </Tooltip> */}\n\n          <Tooltip title=\"Visit our Facebook Page\">\n            <IconButton color=\"secondary\"\n              onClick={() => {window.open(\"https://facebook.com\")}}\n            >\n              <FacebookIcon/>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Visit our Twitter Page\">\n            <IconButton color=\"secondary\"\n              onClick={() => {window.open(\"https://twitter.com\")}}\n            >\n              <TwitterIcon/>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Visit our LinkedIn Page\">\n            <IconButton color=\"secondary\"\n              onClick={() => {window.open(\"https://linkedin.com\")}}\n            >\n              <LinkedInIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        <Dialog\n          fullWidth\n          maxWidth=\"sm\"\n          open={openAbout}\n          onClose={handleAboutClose}\n        >\n          <About\n            show={openAbout}\n            closeFunction={handleAboutClose}\n          />\n        </Dialog>\n\n        <Dialog\n          fullWidth\n          maxWidth=\"sm\"\n          open={openServices}\n          onClose={handleServicesClose}\n        >\n          <Services\n            show={openServices}\n            closeFunction={handleServicesClose}\n          />\n        </Dialog>\n\n        <Dialog\n          fullWidth\n          maxWidth=\"xs\"\n          open={openContactForm}\n          onClose={handleContactFormClose}\n        >\n          <ContactForm\n            show={openContactForm}\n            closeFunction={handleContactFormClose}\n          />\n        </Dialog>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/handshake.5175131e.svg\";"],"sourceRoot":""}